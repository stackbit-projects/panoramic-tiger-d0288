{"version":3,"sources":["webpack:///./src/templates/post.js"],"names":["Post","render","this","props","className","htmlToReact","src","withPrefix","alt","dateTime","moment","strftime","React","Component"],"mappings":"oPAkBqBA,E,kGACjBC,OAAA,WACI,OACI,kBAAC,IAAWC,KAAKC,MACf,6BAASC,UAAU,kBACjB,4BAAQA,UAAU,wBAChB,wBAAIA,UAAU,wBAAwB,IAAMF,KAAKC,MAAO,gCAAiC,OACxF,IAAMD,KAAKC,MAAO,mCAAoC,OACvD,yBAAKC,UAAU,iBACZC,YAAY,IAAMH,KAAKC,MAAO,mCAAoC,SAItE,IAAMD,KAAKC,MAAO,2CAA4C,OAC/D,yBAAKC,UAAU,cACb,yBAAKE,IAAKC,YAAW,IAAML,KAAKC,MAAO,2CAA4C,OAAQK,IAAK,IAAMN,KAAKC,MAAO,0CAA2C,SAG/J,yBAAKC,UAAU,yBACZC,YAAY,IAAMH,KAAKC,MAAO,mBAAoB,QAErD,4BAAQC,UAAU,sBAChB,0BAAMA,UAAU,YACdK,SAAUC,IAAO,IAAMR,KAAKC,MAAO,+BAAgC,OAAOQ,SAAS,mBAAoBD,IAAO,IAAMR,KAAKC,MAAO,+BAAgC,OAAOQ,SAAS,sB,GAvBlKC,IAAMC","file":"component---src-templates-post-js-9abd43bb833a922d9858.js","sourcesContent":["import React from 'react';\nimport _ from 'lodash';\nimport moment from 'moment-strftime';\nimport {graphql} from 'gatsby';\n\nimport {Layout} from '../components/index';\nimport {htmlToReact, withPrefix} from '../utils';\n\n// this minimal GraphQL query ensures that when 'gatsby develop' is running,\n// any changes to content files are reflected in browser\nexport const query = graphql`\n  query($url: String) {\n    sitePage(path: {eq: $url}) {\n      id\n    }\n  }\n`;\n\nexport default class Post extends React.Component {\n    render() {\n        return (\n            <Layout {...this.props}>\n              <article className=\"post post-full\">\n                <header className=\"post-header inner-sm\">\n                  <h1 className=\"post-title underline\">{_.get(this.props, 'pageContext.frontmatter.title', null)}</h1>\n                  {_.get(this.props, 'pageContext.frontmatter.subtitle', null) && (\n                  <div className=\"post-subtitle\">\n                    {htmlToReact(_.get(this.props, 'pageContext.frontmatter.subtitle', null))}\n                  </div>\n                  )}\n                </header>\n                {_.get(this.props, 'pageContext.frontmatter.content_img_path', null) && (\n                <div className=\"post-image\">\n                  <img src={withPrefix(_.get(this.props, 'pageContext.frontmatter.content_img_path', null))} alt={_.get(this.props, 'pageContext.frontmatter.content_img_alt', null)} />\n                </div>\n                )}\n                <div className=\"post-content inner-sm\">\n                  {htmlToReact(_.get(this.props, 'pageContext.html', null))}\n                </div>\n                <footer className=\"post-meta inner-sm\">\n                  <time className=\"published\"\n                    dateTime={moment(_.get(this.props, 'pageContext.frontmatter.date', null)).strftime('%Y-%m-%d %H:%M')}>{moment(_.get(this.props, 'pageContext.frontmatter.date', null)).strftime('%A, %B %e, %Y')}</time>\n                </footer>\n              </article>\n            </Layout>\n        );\n    }\n}\n"],"sourceRoot":""}