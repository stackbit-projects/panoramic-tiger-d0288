{"version":3,"sources":["webpack:///./src/templates/devops.js"],"names":["Blog","render","display_posts","getPages","this","props","pageContext","pages","className","post","post_idx","key","to","withPrefix","src","alt","rel","dateTime","moment","strftime","React","Component"],"mappings":"4RAkBqBA,E,kGACnBC,OAAA,WACE,IAAIC,EAAgB,IAAUC,YAASC,KAAKC,MAAMC,YAAYC,MAAO,iBAAkB,mBAAoB,QAC3G,OACE,kBAAC,IAAWH,KAAKC,MACf,4BAAQG,UAAU,sBAChB,4BAAK,IAAMJ,KAAKC,MAAO,gCAAiC,QAE1D,yBAAKG,UAAU,aACb,yBAAKA,UAAU,oBACZ,IAAMN,GAAe,SAACO,EAAMC,GAAP,OACpB,6BAASC,IAAKD,EAAUF,UAAU,kBAChC,yBAAKA,UAAU,eACZ,IAAMC,EAAM,6BAA8B,OACzC,kBAAC,IAAD,CAAMD,UAAU,iBAAiBI,GAAIC,YAAW,IAAMJ,EAAM,MAAO,QACjE,yBAAKK,IAAKD,YAAW,IAAMJ,EAAM,6BAA8B,OAAQM,IAAK,IAAMN,EAAM,4BAA6B,SAGzH,4BAAQD,UAAU,eAChB,wBAAIA,UAAU,cACZ,kBAAC,IAAD,CAAMI,GAAIC,YAAW,IAAMJ,EAAM,MAAO,OAAQO,IAAI,YACjD,IAAMP,EAAM,oBAAqB,SAIvC,IAAMA,EAAM,sBAAuB,OAClC,yBAAKD,UAAU,gBACb,2BAAI,IAAMC,EAAM,sBAAuB,QAG3C,4BAAQD,UAAU,aAChB,0BAAMA,UAAU,YAAYS,SAAUC,IAAO,IAAMT,EAAM,mBAAoB,OAAOU,SAAS,mBAC1FD,IAAO,IAAMT,EAAM,mBAAoB,OAAOU,SAAS,wB,GAhC5CC,IAAMC","file":"component---src-templates-devops-js-317fc3ce8806a7ce3851.js","sourcesContent":["import React from \"react\";\nimport _ from \"lodash\";\nimport moment from \"moment-strftime\";\nimport { graphql } from \"gatsby\";\n\nimport { Layout } from \"../components/index\";\nimport { getPages, Link, withPrefix } from \"../utils\";\n\n// this minimal GraphQL query ensures that when 'gatsby develop' is running,\n// any changes to content files are reflected in browser\nexport const query = graphql`\n  query($url: String) {\n    sitePage(path: { eq: $url }) {\n      id\n    }\n  }\n`;\n\nexport default class Blog extends React.Component {\n  render() {\n    let display_posts = _.orderBy(getPages(this.props.pageContext.pages, \"/posts/devops\"), \"frontmatter.date\", \"desc\");\n    return (\n      <Layout {...this.props}>\n        <header className=\"screen-reader-text\">\n          <h1>{_.get(this.props, \"pageContext.frontmatter.title\", null)}</h1>\n        </header>\n        <div className=\"post-feed\">\n          <div className=\"post-feed-inside\">\n            {_.map(display_posts, (post, post_idx) => (\n              <article key={post_idx} className=\"post post-card\">\n                <div className=\"post-inside\">\n                  {_.get(post, \"frontmatter.thumb_img_path\", null) && (\n                    <Link className=\"post-thumbnail\" to={withPrefix(_.get(post, \"url\", null))}>\n                      <img src={withPrefix(_.get(post, \"frontmatter.thumb_img_path\", null))} alt={_.get(post, \"frontmatter.thumb_img_alt\", null)} />\n                    </Link>\n                  )}\n                  <header className=\"post-header\">\n                    <h2 className=\"post-title\">\n                      <Link to={withPrefix(_.get(post, \"url\", null))} rel=\"bookmark\">\n                        {_.get(post, \"frontmatter.title\", null)}\n                      </Link>\n                    </h2>\n                  </header>\n                  {_.get(post, \"frontmatter.excerpt\", null) && (\n                    <div className=\"post-content\">\n                      <p>{_.get(post, \"frontmatter.excerpt\", null)}</p>\n                    </div>\n                  )}\n                  <footer className=\"post-meta\">\n                    <time className=\"published\" dateTime={moment(_.get(post, \"frontmatter.date\", null)).strftime(\"%Y-%m-%d %H:%M\")}>\n                      {moment(_.get(post, \"frontmatter.date\", null)).strftime(\"%B %d, %Y\")}\n                    </time>\n                  </footer>\n                </div>\n              </article>\n            ))}\n          </div>\n        </div>\n      </Layout>\n    );\n  }\n}\n"],"sourceRoot":""}