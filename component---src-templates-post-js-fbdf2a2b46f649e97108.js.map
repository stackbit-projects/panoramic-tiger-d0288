{"version":3,"sources":["webpack:///./src/templates/post.js"],"names":["Post","render","this","props","className","htmlToReact","src","withPrefix","alt","dateTime","moment","strftime","React","Component"],"mappings":"oPAkBqBA,E,kGACjBC,OAAA,WACI,OACI,kBAAC,IAAWC,KAAKC,MACf,6BAASC,UAAU,kBACjB,4BAAQA,UAAU,wBAChB,wBAAIA,UAAU,wBAAwB,IAAMF,KAAKC,MAAO,gCAAiC,OACxF,IAAMD,KAAKC,MAAO,mCAAoC,OACvD,yBAAKC,UAAU,iBACZC,YAAY,IAAMH,KAAKC,MAAO,mCAAoC,SAItE,IAAMD,KAAKC,MAAO,2CAA4C,OAC/D,yBAAKC,UAAU,cACb,yBAAKE,IAAKC,YAAW,IAAML,KAAKC,MAAO,2CAA4C,OAAQK,IAAK,IAAMN,KAAKC,MAAO,0CAA2C,SAG/J,yBAAKC,UAAU,yBACZC,YAAY,IAAMH,KAAKC,MAAO,mBAAoB,QAErD,4BAAQC,UAAU,sBAChB,0BAAMA,UAAU,YACdK,SAAUC,IAAO,IAAMR,KAAKC,MAAO,+BAAgC,OAAOQ,SAAS,mBAAoBD,IAAO,IAAMR,KAAKC,MAAO,+BAAgC,OAAOQ,SAAS,sB,GAvBlKC,IAAMC","file":"component---src-templates-post-js-fbdf2a2b46f649e97108.js","sourcesContent":["import React from 'react';\r\nimport _ from 'lodash';\r\nimport moment from 'moment-strftime';\r\nimport {graphql} from 'gatsby';\r\n\r\nimport {Layout} from '../components/index';\r\nimport {htmlToReact, withPrefix} from '../utils';\r\n\r\n// this minimal GraphQL query ensures that when 'gatsby develop' is running,\r\n// any changes to content files are reflected in browser\r\nexport const query = graphql`\r\n  query($url: String) {\r\n    sitePage(path: {eq: $url}) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nexport default class Post extends React.Component {\r\n    render() {\r\n        return (\r\n            <Layout {...this.props}>\r\n              <article className=\"post post-full\">\r\n                <header className=\"post-header inner-sm\">\r\n                  <h1 className=\"post-title underline\">{_.get(this.props, 'pageContext.frontmatter.title', null)}</h1>\r\n                  {_.get(this.props, 'pageContext.frontmatter.subtitle', null) && (\r\n                  <div className=\"post-subtitle\">\r\n                    {htmlToReact(_.get(this.props, 'pageContext.frontmatter.subtitle', null))}\r\n                  </div>\r\n                  )}\r\n                </header>\r\n                {_.get(this.props, 'pageContext.frontmatter.content_img_path', null) && (\r\n                <div className=\"post-image\">\r\n                  <img src={withPrefix(_.get(this.props, 'pageContext.frontmatter.content_img_path', null))} alt={_.get(this.props, 'pageContext.frontmatter.content_img_alt', null)} />\r\n                </div>\r\n                )}\r\n                <div className=\"post-content inner-sm\">\r\n                  {htmlToReact(_.get(this.props, 'pageContext.html', null))}\r\n                </div>\r\n                <footer className=\"post-meta inner-sm\">\r\n                  <time className=\"published\"\r\n                    dateTime={moment(_.get(this.props, 'pageContext.frontmatter.date', null)).strftime('%Y-%m-%d %H:%M')}>{moment(_.get(this.props, 'pageContext.frontmatter.date', null)).strftime('%A, %B %e, %Y')}</time>\r\n                </footer>\r\n              </article>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n"],"sourceRoot":""}